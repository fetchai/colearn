syntax = "proto3";

import "google/protobuf/empty.proto";

package contract_learn.grpc;

message RequestMLSetup {
    string dataset_loader_name = 1;
    string dataset_loader_parameters = 2;
    string model_arch_name = 3;
    string model_parameters = 4;
    optional string prediction_dataset_loader_name = 5;
    optional string prediction_dataset_loader_parameters = 6;
};

enum MLSetupStatus {
    UNDEFINED = 0;
    SUCCESS = 1;
    ERROR = 2;
};

message ResponseMLSetup {
    MLSetupStatus status = 1;
    string description = 2;
};

message DiffPrivBudget {
    float target_epsilon   = 1;
    float target_delta     = 2;
    float consumed_epsilon = 3;
    float consumed_delta   = 4;
};

message TrainingSummary {
    DiffPrivBudget dp_budget = 1;
};

message WeightsPart {
    bytes weights      = 1;
    uint32 byte_index  = 2;
    uint64 total_bytes = 3;

    TrainingSummary training_summary = 10;
};

message ProposedWeights {
    float vote_score = 1;
    float test_score = 2;
    bool vote = 3;
};

message RequestStatus {
};

enum SystemStatus {
    WORKING=0;
    NO_MODEL=1;
    INTERNAL_ERROR=2;
    UNKNOWN=3;
}

message ResponseStatus {
    SystemStatus status = 1;
};

message DatasetLoaderSpec {
    string name = 1;
    string default_parameters = 2; // JSON encoded default parameters
};

message PredictionDatasetLoaderSpec {
    string name = 1;
    string default_parameters = 2; // JSON encoded default parameters
};

message ModelArchSpec {
    string name = 1;
    string default_parameters = 2; // JSON encoded default parameters for the model arch.
};

message DataCompatibilitySpec {
    string model_architecture = 1;
    repeated string dataloaders = 2;
};

message PredictonDataCompatibilitySpec {
    string model_architecture = 1;
    repeated string prediction_dataloaders = 2;
};

message ResponseVersion {
    string version = 1;
};

message ResponseCurrentModel {
    uint32 model_format = 1;
    string model_file = 2;
    bytes model = 3;
};

message ResponseSupportedSystem {
    repeated DatasetLoaderSpec data_loaders    = 1;
    repeated PredictionDatasetLoaderSpec prediction_data_loaders    = 2;
    repeated ModelArchSpec model_architectures = 3;
    repeated DataCompatibilitySpec data_compatibilities = 4;
    repeated PredictonDataCompatibilitySpec pred_compatibilities = 5;
};

message PredictionRequest {
    string name = 1;
    bytes input_data = 2;
    optional string pred_dataloader_key = 3;
};

message PredictionResponse {
    string name = 1;
    bytes prediction_data = 2;
};


service GRPCLearner {
    rpc QueryVersion(google.protobuf.Empty) returns (ResponseVersion);
    rpc QuerySupportedSystem(google.protobuf.Empty) returns (ResponseSupportedSystem);
    rpc GetCurrentModel(google.protobuf.Empty) returns (ResponseCurrentModel);
    rpc MLSetup(RequestMLSetup) returns (ResponseMLSetup);
    rpc ProposeWeights(google.protobuf.Empty) returns (stream WeightsPart);
    rpc TestWeights(stream WeightsPart) returns (ProposedWeights);
    rpc SetWeights(stream WeightsPart) returns (google.protobuf.Empty);
    rpc GetCurrentWeights(google.protobuf.Empty) returns (stream WeightsPart);
    rpc StatusStream(stream RequestStatus) returns (stream ResponseStatus);
    rpc MakePrediction(PredictionRequest) returns (PredictionResponse);
};
